sudo: required
services: docker
language: generic
notifications:
  slack:
    secure: NNYvwevpHX7nqUZ0LCpYa1l7RA5/p4fAJQxH07UEeTEDgjpMvw0Mu7aqjFfyNoi+zbhIFLLs3WmNtppJ3g5ZjUWME61DH+GhTxtHw5ezwgW1lDVjjostmh6oJ4G0b2ph0hVpfKdbLV5aEfeAcqnMXPcHpmwJwhcQy0rC26nyuqxLJgMcRswl80BPGBcP9wLD/ZTrbeS4v1tN4ZomVXtnrbRt1f+8N1No5f9E2XbjdeN6yIy76c2ZMG8DIxZNP+2m8sghzyN5w8WZUp4N63dLL9QeiWfV99HyMMaezUdr4gy7ZTP9/+ZKrxCCJnDLwqxXp/gp2h48juz5GTi3McVd7r8Yx+U1fO6nyRJ4BNL/9UNV+AhX1HLZm68vUlK0eKt0kzjgvt6v9Jt83h8LF8s8jVMypI1EHAAfw011N28sflZbtsnJT5d0nYKKwjBk6I/PMRKFcaBQ7GEH5R3SNlh90rNXzgl/L/9ugqptzvquSAncm456TaTCpkDGugtoXh5FzE/6Q3PhE1O54QvbiD3BUqzi2qTbfF+7xXjrIwwkKqF5FLkXHMUIw6fWvttFPtpmw5yrzibmxOUnxf+TeU+jHyVpU1vM/L8J39XnRPuycA0ZzEdOau01qemKxMeWBTEajQmxWKOqUwLF/FhQG6t0iubEzN80TS7ip/4QFgCDbs4=
    on_success: always
    on_failure: always
jobs:
  include:
    - stage: build docker images
      env:
        - TAGX86=$(grep "ENV VERSION" Dockerfile | awk 'NF>1{print $NF}')
        - TAGARM=$(grep "ENV VERSION" Dockerfile.arm | awk 'NF>1{print $NF}')
      script:
      - echo $TAGX86
      - echo $TAGARM
      # x86 build
      - docker build -t sdelrio/claymore-exporter -f Dockerfile .
      # prepare qemu for arm build
      - docker run --rm --privileged multiarch/qemu-user-static:register --reset
      # build arm image
      - docker build -t sdelrio/claymore-exporter-arm -f Dockerfile.arm .
      - >
        if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
          docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
          docker tag sdelrio/claymore-exporter sdelrio/claymore-exporter:$TAGX86
          docker push sdelrio/claymore-exporter:$TAGX86
          docker push sdelrio/claymore-exporter
          docker tag sdelrio/claymore-exporter-arm sdelrio/claymore-exporter-arm:$TAGARM
          docker push sdelrio/claymore-exporter-arm:$TAGARM
          docker push sdelrio/claymore-exporter-arm
        fi
    - stage: test
      script:
      # test x86 image
      - docker run --rm -ti --entrypoint python sdelrio/claymore-exporter --version
      - docker run --rm -ti --entrypoint python sdelrio/claymore-exporter /usr/local/bin/claymore-exporter.py -h
      # test arm image
      # prepare qemu for arm build
      - docker run --rm --privileged multiarch/qemu-user-static:register --reset
      - docker run --rm -ti --entrypoint python sdelrio/claymore-exporter-arm --version
      - docker run --rm -ti --entrypoint python sdelrio/claymore-exporter-arm /usr/local/bin/claymore-exporter.py -h

